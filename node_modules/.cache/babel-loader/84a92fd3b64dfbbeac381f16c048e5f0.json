{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoen\\\\Desktop\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\FocusDuration.js\";\nimport React from \"react\";\nimport { secondsToDuration } from \"../utils/duration/index\";\n\nconst FocusDuration = ({\n  clockTimes,\n  setClockTimes\n}) => {\n  const handleFocusChange = event => {\n    // check to see whether the plus or minus button was pressed\n    let focusChange = event.target.id === \"decrease-focus\" ? 0 - 5 * 60 : 5 * 60; // max bound: 60 min * 60 sec\n\n    if (focusChange > 60 * 60) {\n      focusChange = 60 * 60;\n    } // min bound: 5 min * 60 sec\n    else if (focusChange < 5 * 60) {\n        focusChange = 5 * 60;\n      } // change the focusSetting variable based off of newTime\n\n\n    setClockTimes({ ...clockTimes,\n      focusSetting: clockTimes.focusSetting + focusChange\n    });\n  };\n  /*\r\n  const handleBreakChange = ({ clockTimes, setClockTimes }) => {\r\n      let newBreakTime = (event.target.id === \"decrease-break\") ? 0 - (60) : 60;\r\n      //Max Bound\r\n      if(newBreakTime > 15 * 60) {\r\n          newBreakTime = 15 * 60;\r\n      }\r\n      //Min Bound\r\n      else if (new time < 60\r\n      newBreakTime = 60;\r\n  }\r\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, \"Focus Duration: \", secondsToDuration(clockTimes.focusSetting)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: handleFocusChange,\n    id: \"decrease-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    id: \"decrease-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: handleFocusChange,\n    id: \"increase-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  })))));\n};\n\nexport default FocusDuration;","map":{"version":3,"sources":["C:/Users/Phoen/Desktop/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/FocusDuration.js"],"names":["React","secondsToDuration","FocusDuration","clockTimes","setClockTimes","handleFocusChange","event","focusChange","target","id","focusSetting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAmC;AACxD,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACpC;AACA,QAAIC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAaC,EAAb,KAAoB,gBAArB,GAAyC,IAAK,IAAI,EAAlD,GAAyD,IAAI,EAA/E,CAFoC,CAIpC;;AAIA,QAAGF,WAAW,GAAG,KAAK,EAAtB,EAA0B;AACzBA,MAAAA,WAAW,GAAG,KAAK,EAAnB;AACA,KAFD,CAGA;AAHA,SAIK,IAAGA,WAAW,GAAG,IAAI,EAArB,EAAyB;AAC7BA,QAAAA,WAAW,GAAG,IAAI,EAAlB;AACA,OAdmC,CAgBpC;;;AACAH,IAAAA,aAAa,CAAC,EACb,GAAGD,UADU;AAEbO,MAAAA,YAAY,EAAEP,UAAU,CAACO,YAAX,GAA0BH;AAF3B,KAAD,CAAb;AAIA,GArBD;AAsBG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEkBN,iBAAiB,CAACE,UAAU,CAACO,YAAZ,CAFnC,CADD,eAMC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,SAAS,EAAC,mBAFX;AAGC,mBAAY,gBAHb;AAIC,IAAA,OAAO,EAAEL,iBAJV;AAKC,IAAA,EAAE,EAAC,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOC;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,EAAE,EAAC,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CAFD,eAYC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,SAAS,EAAC,mBAFX;AAGC,mBAAY,gBAHb;AAIO,IAAA,OAAO,EAAEA,iBAJhB;AAKO,IAAA,EAAE,EAAC,gBALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOC;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CAZD,CAND,CADD,CADD;AAiCA,CApED;;AAsEA,eAAeH,aAAf","sourcesContent":["import React from \"react\";\r\nimport { secondsToDuration } from \"../utils/duration/index\";\r\n\r\nconst FocusDuration = ({ clockTimes, setClockTimes }) => {\r\n\tconst handleFocusChange = (event) => {\r\n\t\t// check to see whether the plus or minus button was pressed\r\n\t\tlet focusChange = (event.target.id === \"decrease-focus\") ? 0 - (5 * 60) : (5 * 60);\r\n\r\n\t\t// max bound: 60 min * 60 sec\r\n\t\t\r\n\r\n\r\n\t\tif(focusChange > 60 * 60) {\r\n\t\t\tfocusChange = 60 * 60;\r\n\t\t}\r\n\t\t// min bound: 5 min * 60 sec\r\n\t\telse if(focusChange < 5 * 60) {\r\n\t\t\tfocusChange = 5 * 60;\r\n\t\t}\r\n\r\n\t\t// change the focusSetting variable based off of newTime\r\n\t\tsetClockTimes({\r\n\t\t\t...clockTimes,\r\n\t\t\tfocusSetting: clockTimes.focusSetting + focusChange,\r\n\t\t});\r\n\t};\r\n    /*\r\n    const handleBreakChange = ({ clockTimes, setClockTimes }) => {\r\n        let newBreakTime = (event.target.id === \"decrease-break\") ? 0 - (60) : 60;\r\n        //Max Bound\r\n        if(newBreakTime > 15 * 60) {\r\n            newBreakTime = 15 * 60;\r\n        }\r\n        //Min Bound\r\n        else if (new time < 60\r\n        newBreakTime = 60;\r\n    }\r\n    */\r\n\treturn (\r\n\t\t<div className=\"col\">\r\n\t\t\t<div className=\"input-group input-group-lg mb-2\">\r\n\t\t\t\t<span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n\t\t\t\t\t{/* DONE: Update this text to display the current focus session duration */}\r\n\t\t\t\t\tFocus Duration: {secondsToDuration(clockTimes.focusSetting)}\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t{/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-secondary\"\r\n\t\t\t\t\t\tdata-testid=\"decrease-focus\"\r\n\t\t\t\t\t\tonClick={handleFocusChange}\r\n\t\t\t\t\t\tid=\"decrease-focus\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"oi oi-minus\" id=\"decrease-focus\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-secondary\"\r\n\t\t\t\t\t\tdata-testid=\"increase-focus\"\r\n            onClick={handleFocusChange}\r\n            id=\"increase-focus\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"oi oi-plus\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FocusDuration;"]},"metadata":{},"sourceType":"module"}