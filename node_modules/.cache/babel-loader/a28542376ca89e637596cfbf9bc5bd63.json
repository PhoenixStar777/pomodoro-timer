{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoen\\\\Desktop\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\FocusDuration.js\";\nimport React from \"react\";\nimport { secondsToDuration } from \"../utils/duration/index\";\n\nconst FocusDuration = ({\n  clockTimes,\n  setClockTimes\n}) => {\n  const handleFocusChange = event => {\n    // check to see whether the plus or minus button was pressed\n    let focusChange = event.target.id === \"decrease-focus\" ? 0 - 5 * 60 : 5 * 60; // max bound: 60 min * 60 sec\n\n    if (clockTimes.focusSetting + focusChange > 60 * 60) {\n      focusChange = 0;\n    } // min bound: 5 min * 60 sec\n    else if (clockTimes.focusSetting + focusChange < 5 * 60) {\n        focusChange = 0;\n      } // change the focusSetting variable based off of newTime\n\n\n    setClockTimes({ ...clockTimes,\n      focusSetting: clockTimes.focusSetting + focusChange,\n      focusRemaining: clockTimes.focusSetting + focusChange\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", clockTimes.focusSetting === 60 * 60 ? \"60:00\" : secondsToDuration(clockTimes.focusSetting)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: handleFocusChange,\n    id: \"decrease-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    id: \"decrease-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: handleFocusChange,\n    id: \"increase-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default FocusDuration;","map":{"version":3,"sources":["C:/Users/Phoen/Desktop/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/FocusDuration.js"],"names":["React","secondsToDuration","FocusDuration","clockTimes","setClockTimes","handleFocusChange","event","focusChange","target","id","focusSetting","focusRemaining"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAmC;AAGrD,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC;AACA,QAAIC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAaC,EAAb,KAAoB,gBAArB,GAAyC,IAAK,IAAI,EAAlD,GAAyD,IAAI,EAA/E,CAFiC,CAIjC;;AACA,QAAIN,UAAU,CAACO,YAAX,GAA0BH,WAA1B,GAAwC,KAAK,EAAjD,EAAqD;AACjDA,MAAAA,WAAW,GAAG,CAAd;AACH,KAFD,CAGA;AAHA,SAIK,IAAIJ,UAAU,CAACO,YAAX,GAA0BH,WAA1B,GAAwC,IAAI,EAAhD,EAAoD;AACrDA,QAAAA,WAAW,GAAG,CAAd;AACH,OAXgC,CAajC;;;AACAH,IAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AAEVO,MAAAA,YAAY,EAAEP,UAAU,CAACO,YAAX,GAA0BH,WAF9B;AAGVI,MAAAA,cAAc,EAAER,UAAU,CAACO,YAAX,GAA0BH;AAHhC,KAAD,CAAb;AAKH,GAnBD;;AAqBJ,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEUJ,UAAU,CAACO,YAAX,KAA6B,KAAK,EAAlC,GAAwC,OAAxC,GAAkDT,iBAAiB,CAACE,UAAU,CAACO,YAAZ,CAF7E,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,mBAFd;AAGI,mBAAY,gBAHhB;AAII,IAAA,OAAO,EAAEL,iBAJb;AAKI,IAAA,EAAE,EAAC,gBALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,EAAE,EAAC,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAFJ,eAYI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,mBAFd;AAGI,mBAAY,gBAHhB;AAII,IAAA,OAAO,EAAEA,iBAJb;AAKI,IAAA,EAAE,EAAC,gBALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAZJ,CANJ,CADJ,CADJ;AAiCC,CAzDD;;AA2DA,eAAeH,aAAf","sourcesContent":["import React from \"react\";\r\nimport { secondsToDuration } from \"../utils/duration/index\";\r\n\r\nconst FocusDuration = ({ clockTimes, setClockTimes }) => {\r\n    \r\n\r\n    const handleFocusChange = (event) => {\r\n        // check to see whether the plus or minus button was pressed\r\n        let focusChange = (event.target.id === \"decrease-focus\") ? 0 - (5 * 60) : (5 * 60);\r\n\r\n        // max bound: 60 min * 60 sec\r\n        if (clockTimes.focusSetting + focusChange > 60 * 60) {\r\n            focusChange = 0;\r\n        }\r\n        // min bound: 5 min * 60 sec\r\n        else if (clockTimes.focusSetting + focusChange < 5 * 60) {\r\n            focusChange = 0;\r\n        }\r\n\r\n        // change the focusSetting variable based off of newTime\r\n        setClockTimes({\r\n            ...clockTimes,\r\n            focusSetting: clockTimes.focusSetting + focusChange,\r\n            focusRemaining: clockTimes.focusSetting + focusChange\r\n        });\r\n    };\r\n\r\nreturn (\r\n    <div className=\"col\">\r\n        <div className=\"input-group input-group-lg mb-2\">\r\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n                {/* DONE: Update this text to display the current focus session duration */}\r\n\t\t\t\t\tFocus Duration: {clockTimes.focusSetting === (60 * 60) ? \"60:00\" : secondsToDuration(clockTimes.focusSetting)}\r\n            </span>\r\n\r\n            <div className=\"input-group-append\">\r\n                {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    data-testid=\"decrease-focus\"\r\n                    onClick={handleFocusChange}\r\n                    id=\"decrease-focus\"\r\n                >\r\n                    <span className=\"oi oi-minus\" id=\"decrease-focus\" />\r\n                </button>\r\n                {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    data-testid=\"increase-focus\"\r\n                    onClick={handleFocusChange}\r\n                    id=\"increase-focus\"\r\n                >\r\n                    <span className=\"oi oi-plus\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\t);\r\n}\r\n\r\nexport default FocusDuration;"]},"metadata":{},"sourceType":"module"}