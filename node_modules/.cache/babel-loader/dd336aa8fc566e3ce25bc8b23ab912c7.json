{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoen\\\\Desktop\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\TimeRemaining.js\";\nimport React from \"react\";\nimport { secondsToDuration } from \"../utils/duration/index\";\n\nconst TimeRemaining = ({\n  clockTimes,\n  isTimerRunning\n}) => {\n  if (!clockTimes.isSessionActive) {\n    return null;\n  }\n\n  const getTimerHeading = () => {\n    return clockTimes.focus ? `Focusing for ${secondsToDuration(clockTimes.focusSetting)} minutes` : `On break for ${secondsToDuration(clockTimes.breakSetting)} minutes`;\n  };\n\n  const getRemainingHeading = () => {\n    return (// condition ? true action : false action\n      clockTimes.focus ? `${secondsToDuration(clockTimes.focusRemaining)}` : `${secondsToDuration(clockTimes.breakRemaining)}`\n    );\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, getTimerHeading()), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, getRemainingHeading(), \" remaining\"), \"        //\", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, clockTimes.isSessionActive && !isTimerRunning ? \"PAUSED\" : null)));\n};\n\nexport default TimeRemaining;","map":{"version":3,"sources":["C:/Users/Phoen/Desktop/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/TimeRemaining.js"],"names":["React","secondsToDuration","TimeRemaining","clockTimes","isTimerRunning","isSessionActive","getTimerHeading","focus","focusSetting","breakSetting","getRemainingHeading","focusRemaining","breakRemaining"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAoC;AACzD,MAAG,CAACD,UAAU,CAACE,eAAf,EAAgC;AAC/B,WAAO,IAAP;AACA;;AAEE,QAAMC,eAAe,GAAG,MAAM;AAC1B,WAAOH,UAAU,CAACI,KAAX,GACF,gBAAeN,iBAAiB,CAACE,UAAU,CAACK,YAAZ,CAA0B,UADxD,GAEF,gBAAeP,iBAAiB,CAACE,UAAU,CAACM,YAAZ,CAA0B,UAF/D;AAGH,GAJD;;AAKA,QAAMC,mBAAmB,GAAG,MAAM;AAC9B,WAAW;AACPP,MAAAA,UAAU,CAACI,KAAX,GAAoB,GAAEN,iBAAiB,CAACE,UAAU,CAACQ,cAAZ,CAA4B,EAAnE,GACK,GAAEV,iBAAiB,CAACE,UAAU,CAACS,cAAZ,CAA4B;AAFxD;AAIH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,eAAe,EADpB,CAFJ,eAOI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACNI,mBAAmB,EADb,eAPJ,6BAWJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,UAAU,CAACE,eAAX,IAA8B,CAACD,cAA/B,GAAgD,QAAhD,GAA2D,IAAhE,CAXI,CADJ,CADJ;AAiBH,CAlCD;;AAoCA,eAAeF,aAAf","sourcesContent":["import React from \"react\";\r\nimport { secondsToDuration } from \"../utils/duration/index\";\r\n\r\nconst TimeRemaining = ({ clockTimes, isTimerRunning }) => {\r\n\tif(!clockTimes.isSessionActive) {\r\n\t\treturn null;\r\n\t}\r\n\r\n    const getTimerHeading = () => {\r\n        return clockTimes.focus ?\r\n            `Focusing for ${secondsToDuration(clockTimes.focusSetting)} minutes` :\r\n            `On break for ${secondsToDuration(clockTimes.breakSetting)} minutes`\r\n    }\r\n    const getRemainingHeading = () => {\r\n        return ( \t\t// condition ? true action : false action\r\n            clockTimes.focus ? `${secondsToDuration(clockTimes.focusRemaining)}` :\r\n                `${secondsToDuration(clockTimes.breakRemaining)}`\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n                {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n                <h2 data-testid=\"session-title\">\r\n                    {getTimerHeading()}\r\n\r\n                </h2>\r\n                {/* TODO: Update message below to include time remaining in the current session */}\r\n                <p className=\"lead\" data-testid=\"session-sub-title\">\r\n\t\t\t\t\t\t\t\t\t{getRemainingHeading()} remaining\r\n                    \r\n            \t\t</p>        //\r\n\t\t\t\t\t\t\t\t<h3>{clockTimes.isSessionActive && !isTimerRunning ? \"PAUSED\" : null}</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimeRemaining;"]},"metadata":{},"sourceType":"module"}