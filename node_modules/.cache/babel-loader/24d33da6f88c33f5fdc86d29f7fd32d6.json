{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoen\\\\Desktop\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ProgressBar.js\";\nimport React from \"react\";\n\nconst ProgressBar = ({\n  clockTimes\n}) => {\n  const percent = () => {\n    const mode = clockTimes.focus ? \"focus\" : \"break\";\n    return 100 - 100 * (clockTimes[`${mode}Remaining`] / clockTimes[`${mode}Setting`]); //mode will flip based on the situation [breakRemaining]\n    // 100 -> 0\n    // 0 -> 100\n    // 50 -> 50\n    // 75 -> 25\n    // 25 -> 75\n    // 18 -> 82\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent() // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${percent()}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }))));\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/Phoen/Desktop/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js"],"names":["React","ProgressBar","clockTimes","percent","mode","focus","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAEvC,QAAMC,OAAO,GAAG,MAAM;AACrB,UAAMC,IAAI,GAAGF,UAAU,CAACG,KAAX,GAAmB,OAAnB,GAA6B,OAA1C;AACA,WAAO,MAAO,OAAOH,UAAU,CAAE,GAAEE,IAAK,WAAT,CAAV,GAAiCF,UAAU,CAAE,GAAEE,IAAK,SAAT,CAAlD,CAAd,CAFqB,CAGf;AACN;AACA;AACA;AACA;AACA;AACA;AACA,GAVD;;AAYA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeH,OAAO,EALxB,CAK4B;AAL5B;AAME,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAG,GAAEJ,OAAO,EAAG;AAAtB,KANT,CAMqC;AANrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADR,CADD;AAgBA,CA9BD;;AAgCA,eAAeF,WAAf","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nconst ProgressBar = ({ clockTimes }) => {\r\n\r\n\tconst percent = () => {\r\n\t\tconst mode = clockTimes.focus ? \"focus\" : \"break\";\r\n\t\treturn 100 - (100 * (clockTimes[`${mode}Remaining`] / clockTimes[`${mode}Setting`]));\r\n        //mode will flip based on the situation [breakRemaining]\r\n\t\t// 100 -> 0\r\n\t\t// 0 -> 100\r\n\t\t// 50 -> 50\r\n\t\t// 75 -> 25\r\n\t\t// 25 -> 75\r\n\t\t// 18 -> 82\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={percent()} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: `${percent()}%` }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}